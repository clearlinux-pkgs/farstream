From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dominique Leuenberger <dimstar@opensuse.org>
Date: Wed, 12 May 2021 16:20:39 +0200
Subject: [PATCH] Drop volatile qualifiers

Fixes build with GCC11
glib was also adjusted accordingly, see for example
https://gitlab.gnome.org/GNOME/glib/-/issues/600
---
 common-modified/gst-glib-gen.mak                  | 2 +-
 tests/check/transmitter/nice.c                    | 2 +-
 tests/check/transmitter/rawudp.c                  | 2 +-
 transmitters/multicast/fs-multicast-transmitter.c | 2 +-
 transmitters/nice/fs-nice-stream-transmitter.c    | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/common-modified/gst-glib-gen.mak b/common-modified/gst-glib-gen.mak
index 2247a41..d495d30 100644
--- a/common-modified/gst-glib-gen.mak
+++ b/common-modified/gst-glib-gen.mak
@@ -23,7 +23,7 @@ $(glib_gen_basename)-enumtypes.c: $(glib_enum_headers)
 	$(AM_V_GEN)$(GLIB_MKENUMS) \
 	--fhead "#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"$(glib_gen_basename)-enumtypes.h\"\n$(enum_headers)" \
 	--fprod "\n/* enumerations from \"@filename@\" */" \
-	--vhead "GType\n@enum_name@_get_type (void)\n{\n  static volatile gsize g_define_type_id__volatile = 0;\n  if (g_once_init_enter (&g_define_type_id__volatile)) {\n    static const G@Type@Value values[] = {"     \
+	--vhead "GType\n@enum_name@_get_type (void)\n{\n  static gsize g_define_type_id__volatile = 0;\n  if (g_once_init_enter (&g_define_type_id__volatile)) {\n    static const G@Type@Value values[] = {"     \
 	--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
 	--vtail "      { 0, NULL, NULL }\n    };\n    GType g_define_type_id = g_@type@_register_static (\"@EnumName@\", values);\n    g_once_init_leave (&g_define_type_id__volatile, g_define_type_id);\n  }\n  return g_define_type_id__volatile;\n}\n" \
 	$^ > $@
diff --git a/tests/check/transmitter/nice.c b/tests/check/transmitter/nice.c
index f903a00..8dc5df2 100644
--- a/tests/check/transmitter/nice.c
+++ b/tests/check/transmitter/nice.c
@@ -44,7 +44,7 @@ enum {
 gint buffer_count[2][2] = {{0,0}, {0,0}};
 guint received_known[2][2] = {{0,0}, {0,0}};
 GMainLoop *loop = NULL;
-volatile gint running = TRUE;
+gint running = TRUE;
 gboolean associate_on_source = TRUE;
 gboolean is_address_local = FALSE;
 gboolean force_candidates = FALSE;
diff --git a/tests/check/transmitter/rawudp.c b/tests/check/transmitter/rawudp.c
index e1936ac..f1a068b 100644
--- a/tests/check/transmitter/rawudp.c
+++ b/tests/check/transmitter/rawudp.c
@@ -44,7 +44,7 @@ GMainLoop *loop = NULL;
 gint candidates[2] = {0, 0};
 GstElement *pipeline = NULL;
 gboolean src_setup[2] = {FALSE, FALSE};
-volatile gint running = TRUE;
+gint running = TRUE;
 guint received_known[2] = {0, 0};
 gboolean has_stun = FALSE;
 gboolean associate_on_source = TRUE;
diff --git a/transmitters/multicast/fs-multicast-transmitter.c b/transmitters/multicast/fs-multicast-transmitter.c
index 7918c1a..a5b5841 100644
--- a/transmitters/multicast/fs-multicast-transmitter.c
+++ b/transmitters/multicast/fs-multicast-transmitter.c
@@ -541,7 +541,7 @@ struct _UdpSock {
 
   guint component_id;
 
-  volatile gint sendcount;
+  gint sendcount;
 };
 
 static gboolean
diff --git a/transmitters/nice/fs-nice-stream-transmitter.c b/transmitters/nice/fs-nice-stream-transmitter.c
index dac87c6..06cda3d 100644
--- a/transmitters/nice/fs-nice-stream-transmitter.c
+++ b/transmitters/nice/fs-nice-stream-transmitter.c
@@ -110,7 +110,7 @@ struct _FsNiceStreamTransmitterPrivate
 
   GPtrArray *relay_info;
 
-  volatile gint associate_on_source;
+  gint associate_on_source;
 
   gboolean *component_has_been_ready; /* only from NiceAgent main thread */
 
